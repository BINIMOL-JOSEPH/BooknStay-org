"""
Django settings for book_n_stay project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Specify room images stored folder path
MEDIA_ROOT = os.path.join(BASE_DIR.parent, 'media')
MEDIA_URL = '/media/'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG')

ALLOWED_HOSTS = [ "*" ]

CORS_ALLOWED_ORIGINS=[
    "http://localhost:8000",
    "https://booknstay.innovaturelabs.com",
    "http://localhost:3000",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_simplejwt',
    "corsheaders",
    'rest_framework',
    'user_app',
    'hotel_app',
]


MIDDLEWARE = [
  
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'book_n_stay.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'user_app','hotel_app' ,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'book_n_stay.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  
        'NAME': config('DB_NAME'),            
        'USER': config('DB_USER'),                              
        'PASSWORD': config('DB_PASSWORD'),              
        'HOST': config('DB_HOST'),                 
        'PORT': config('DB_PORT'),                    
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'user_app.Login'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny'
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_PAGINATION_CLASS': 'book_n_stay.pagination.CustomPagination',
    'PAGE_SIZE': 5,
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
  }

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

#email settings
EMAIL_BACKEND = config('EMAIL_BACKEND')     
EMAIL_HOST = config('EMAIL_HOST')  
EMAIL_PORT = config('EMAIL_PORT')    
EMAIL_USE_TLS = config('EMAIL_USE_TLS')      
EMAIL_HOST_USER = config('EMAIL_HOST_USER')      
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')  
#urls
VERIFY_EMAIL_URL =  'https://booknstay.innovaturelabs.com/verify-email/'
RESET_PASSWORD_URL = 'https://booknstay.innovaturelabs.com/reset-password/'

MAX_FILE_SIZE_BYTES = 5 * 1024 * 1024
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

LOGIN_URL ='https://booknstay.innovaturelabs.com/login'

STRIPE_SECRETE_KEY = 'sk_test_51OgfktSH5Ttsih911Xdn7FodupSnZTUoCoZoiM3kOaLAJ9eTqK7P924FnNTKbfCgoEl1rgui6F815KaC2LuTMDeB005L0kR4xi'
STRIPE_PUBLIC_KEY = 'pk_test_51OgfktSH5Ttsih91N6JwISv4CvJa2zBdo9vi8A4SSvhwogRbNKxXuAf8lRe7RT7TkGQyvTtzSyKbREbkb0Bwmk4e00EuTd2Odj'
